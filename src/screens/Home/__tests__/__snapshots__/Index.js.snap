// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/screens/Home/index.js should render 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "paddingTop": 20,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "marginTop": 40,
          "textAlign": "center",
        },
      ]
    }
  >
    HOME
  </Text>
  <View
    accessibilityComponentType="button"
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        to Home-2
      </Text>
    </View>
  </View>
  <View>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>
  <ActivityIndicator
    animating={true}
    color="#000"
    hidesWhenStopped={true}
    size="large"
    style={
      Array [
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "height": "100%",
          "left": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        },
        Object {
          "top": 20,
        },
      ]
    }
  />
</View>
`;
